import os
import re
import csv
import numpy as np
import pandas as pd
import pickle
import random
import time
from sklearn.metrics import confusion_matrix
import json

malware_behaviour = {'regkey_deleted', 'file_created', 'file_deleted', 'file_written', 'resolves_host', 'file_recreated', 'regkey_written', 'wmi_query', 'file_failed', 'file_read', 'regkey_opened', 'file_opened', 'tls_master', 'directory_created', 'file_exists', 'regkey_read', 'guid', 'command_line', 'dll_loaded', 'file_copied', 'directory_removed', 'connects_host', 'connects_ip', 'mutex', 'directory_enumerated', 'file_moved'}
benign_behaviour = {'file_created', 'dll_loaded', 'file_opened', 'regkey_opened', 'file_written', 'file_failed', 'file_read', 'regkey_read', 'file_exists', 'guid', 'directory_created', 'mutex', 'directory_enumerated', 'regkey_written', 'command_line', 'file_deleted', 'directory_removed', 'file_recreated', 'connects_host', 'resolves_host', 'regkey_deleted', 'connects_ip', 'file_copied', 'fetches_url', 'file_moved', 'wmi_query'}

intersection = malware_behaviour.intersection(benign_behaviour)
# print(intersection)

def combine_dataframe(filea,fileb):	
	merged = [filea, fileb]
	merged = pd.concat(merged)
	return merged

def csv_reader(filename):
    data_frame = pd.read_csv(filename)
    return data_frame

def pickle_loader(filename):
	pick=pickle.load(open(filename,'rb'))
	return pick
# print(final_features)

# print(final_features['SizeOfOptionalHeader1'])

def dict_to_csv(filename,csv_filename):
	with open(csv_filename, "w") as outfile:
	   writer = csv.writer(outfile)
	   writer.writerow(filename.keys())
	   writer.writerows(zip(*filename.values()))

def data_label_breaker(data, parse_label=True, random_sort=False):
    
    data = data.values
    if random_sort:
        random.shuffle(data)
     
    # print(data)
    if parse_label:
        label = data[:, 0]
        data = data[:, 1:]

    return data, label

def test_data(model, X, y=None, analyse=True):
    t0 = time.time()
    predicted_labels = model.predict(X)
    t1 = time.time()

    if analyse:
        if y is None:
            print("Error")
        print("Accuracy : ", model.score(X, y))
        print("Confusion Matrix is ", confusion_matrix(y, predicted_labels))
        print("Prediction Time ", t1 - t0)

    return predicted_labels

# malware = pickle_loader('MAL_DYNAMIC')
# benign = pickle_loader('BEN_DYNAMIC')
# malware=pd.DataFrame(malware)
# benign=pd.DataFrame(benign)

# combine_dataframe = combine_dataframe(benign,malware)
# pickle.dump(combine_dataframe,open('combine_dataframe_dynamic', 'wb'))

# print(benign)
#if __name__ == '__main__':
	# benign_dict = pickle_loader('final_features_benign')
	# malware_dict = pickle_loader('final_features_malware')
	
	# # print(len(malware_dict['Name:']))

	# benign_df = pd.DataFrame.from_dict(benign_dict)
	# malware_df = pd.DataFrame.from_dict(malware_dict)

	# benign_df.insert(0,'Label',1)
	# malware_df.insert(0,'Label',0)
	# # print(benign_df)

	# # dict_to_csv(benign_dict,'Benign_Features.csv')

	# # data_frame1 = csv_reader('Benign_Features.csv')
	# # data_frame1.insert(0,'Label',1)

	# # print(data_frame1)



	# # dict_to_csv(malware_dict,'Malware_Features.csv')

	# # data_frame2 = csv_reader('Malware_Features.csv')
	# # data_frame2.insert(0,'Label',0) 

	# combine_dataframe = combine_dataframe(benign_df,malware_df)

	# pickle.dump(combine_dataframe,open('combine_dataframe', 'wb'))
	# # print(data_frame2)
