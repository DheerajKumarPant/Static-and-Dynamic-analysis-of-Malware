
import os
import re
import csv
import numpy as np
import pandas as pd
import pickle
import json

os.chdir('C:\\Dynamic_Analysis_RAWDATA\\Benign')
x = os.listdir('.')

features_behave_summ = ['directory_created','file_created','file_read', 'dll_loaded', 'regkey_opened', 
'file_failed', 'guid',  'file_exists', 'file_written' , 'file_opened', 'directory_enumerated', 'regkey_read',]

features_network=['udp','icmp','http','tcp','dns']

features = ['LABEL','INF0DURA','BEHGEN','BEHPROC']
features=features+features_network+features_behave_summ

def openJSON(direc):
	f = open(direc)
	data=json.load(f)

	f.close()

	return data

def direct_access_features(data,final_features,counter):
	final_features.append([])
	final_features[counter].append('B') #For Benign Label is B
	try:
		final_features[counter].append(data['info']['duration'])
	except:
		final_features[counter].append(0)
	try:
		final_features[counter].append(len(data['behavior']['generic']))
	except:
		final_features[counter].append(0)
	try:
		final_features[counter].append(len(data['behavior']['processes']))
	except:
		final_features[counter].append(0)


counter = 0

final_features=[]
# final_features.append([])
'''
for i in range(len_of_features):
	final_features[0].append(features[i])
'''
for direc in x:
	# if counter>1:
		# break
	data = openJSON(direc)
	
	direct_access_features(data,final_features,counter)

	for net in features_network:

		if data['network'].get(net,-1) != -1:
			final_features[counter].append(len(data['network'][net]))
		else:
			final_features[counter].append(0)
	
	for summary in features_behave_summ:
		if data['behavior']['summary'].get(summary,-1) != -1 :
			final_features[counter].append(len(data['behavior']['summary'][summary]))
		else:
			final_features[counter].append(0)
	'''
	try:
		key = list(data['behavior']['apistats'].keys())[0]
		for api in features_api:
			if data['behavior']['apistats'][key].get(api,-1) != -1 :
				final_features[counter].append(data['behavior']['apistats'][key][api])
			else:
				final_features[counter].append(0)
	except:
		for api in features_api:
			final_features[counter].append(0)
		
	'''

	# summary = data['behavior']['summary']

	# router.add(data['info']['route'])

	# for itr in summary:
		# dictionary[itr]=1
	# print(data)

	

	
	
	
	counter +=1
	print(counter)

# print(final_features)
pickle.dump(final_features, open('BEN_DYNAMIC', 'wb'))

'''
set_malware_api = {'NtOpenSection', 'SetUnhandledExceptionFilter', 'ShellExecuteExW', 'CryptAcquireContextA', 'GetAdaptersInfo',
 'SetFilePointerEx', 'CoCreateInstance', 'getaddrinfo', 'RtlCreateUserThread', 'CryptDecodeObjectEx', 'RegDeleteKeyA', 
 'WSARecvFrom', 'LdrLoadDll', 'SetErrorMode', 'NtReadFile', 'RegDeleteValueA', 'NtEnumerateKey', 'IWbemServices_ExecQuery', 
 'GetUserNameW', 'CreateServiceW', 'SHGetFolderPathW', 'FindResourceA', 'CoGetClassObject', 'InternetSetOptionA', 
 'ReadProcessMemory', 'HttpOpenRequestW', 'FindWindowExA', 'NtDeleteValueKey', 'UuidCreate', 'DeleteFileW', 'DrawTextExW', 
 'GetComputerNameW', 'NtSetValueKey', 'SendNotifyMessageA', 'Module32FirstW', 'GetFileType', 'CertOpenStore', '__exception__',
  'LoadResource', 'WriteConsoleW', 'GetFileVersionInfoSizeExW', 'GetVolumePathNamesForVolumeNameW', 'NtDeviceIoControlFile', 
  'DrawTextExA', 'OpenServiceA', 'RegQueryInfoKeyA', 'OutputDebugStringA', 'FindResourceExW', 'InternetOpenUrlA', 
  'GetSystemDirectoryW', 'CreateToolhelp32Snapshot', 'GetFileVersionInfoSizeW', 'RegQueryValueExA', 'GetNativeSystemInfo',
   'SetWindowsHookExA', 'ioctlsocket', 'HttpOpenRequestA', 'NtSuspendThread', 'Module32NextW', 'NtOpenKeyEx',
    'GetAddrInfoW', 'GetComputerNameA', 'InternetOpenW', 'FindResourceExA', 'RegOpenKeyExW', 'FindWindowExW', 
    'DeleteUrlCacheEntryW', 'gethostbyname', 'select', 'getsockname', 'GetFileSizeEx', 'DeleteService', 'LookupAccountSidW', 
    'CertOpenSystemStoreA', 'CryptGenKey', 'OpenSCManagerA', 'NtQuerySystemInformation', 'NtQueryInformationFile', 
    'CryptAcquireContextW', 'CryptProtectData', 'FindFirstFileExW', 'CoUninitialize', 'NtMapViewOfSection', 'RemoveDirectoryW', 'accept', 'CoInitializeEx', 'RegEnumValueW', 'FindResourceW', 'InternetConnectW', 'RegQueryInfoKeyW', 'HttpSendRequestW', 'CoCreateInstanceEx', 'NtSetContextThread', 'NtLoadDriver', 'NtWriteFile', 'GlobalMemoryStatus', 'DeviceIoControl', 'CreateDirectoryExW', 'GetTimeZoneInformation', 'NetGetJoinInformation', 'GetDiskFreeSpaceExW', 'CryptCreateHash', 'IWbemServices_ExecMethod', 'LoadStringW', 'OpenSCManagerW', 'CryptUnprotectMemory', 'WSAStartup', 'SetFilePointer', 'GetSystemTimeAsFileTime', 'InternetConnectA', 'RtlRemoveVectoredExceptionHandler', 'CreateJobObjectW', 'HttpQueryInfoA', 'RegCloseKey', 'SetFileAttributesW', 'RegCreateKeyExA', 'FindWindowW', 'GetFileAttributesW', 'InternetCrackUrlA', 'ReadCabinetState', 'NtAllocateVirtualMemory', 'NtTerminateProcess', 'ControlService', 'NtProtectVirtualMemory', 'NtTerminateThread', 'InternetQueryOptionA', 'LdrUnloadDll', 'WSASocketA', 'setsockopt', 'RegDeleteKeyW', 'GetSystemWindowsDirectoryA', 'InternetGetConnectedStateExA', 'CreateThread', 'NtOpenThread', 'GetUserNameA', 'StartServiceW', 'GetKeyState', 'GetSystemWindowsDirectoryW', 'MessageBoxTimeoutW', 'RegDeleteValueW', 'SetWindowsHookExW', 'GetFileSize', 'NtDuplicateObject', 'UnhookWindowsHookEx', 'CopyFileExW', 'NtFreeVirtualMemory', 'RegOpenKeyExA', 'InternetGetConnectedState', 'CertCreateCertificateContext', 'RegisterHotKey', 'RegQueryValueExW', 'CertControlStore', 'NtQueueApcThread', 'WSASocketW', 'GetUserNameExW', 'SetFileTime', 'SetStdHandle', 'GetCursorPos', 'NtCreateSection', 'RemoveDirectoryA', 'InternetSetStatusCallback', 'StartServiceA', 'RtlAddVectoredContinueHandler', 'HttpSendRequestA', 'NtEnumerateValueKey', 'SHGetSpecialFolderLocation', 'GetFileInformationByHandleEx', 'EnumWindows', 'SendNotifyMessageW', 'socket', 'CopyFileW', 'LookupPrivilegeValueW', 'listen', 'NtCreateMutant', 'RegEnumKeyExA', 'MessageBoxTimeoutA', 'SearchPathW', 'GlobalMemoryStatusEx', 'NtOpenMutant', 'RegCreateKeyExW', 'LdrGetProcedureAddress', 'FindWindowA', 'RegEnumKeyExW', 'NtOpenKey', 'RegSetValueExA', 'Thread32Next', 'EnumServicesStatusA', 'LdrGetDllHandle', 'GetAdaptersAddresses', 'GetBestInterfaceEx', 'MoveFileWithProgressW', 'NtCreateThreadEx', 'CoInitializeSecurity', 'NtOpenDirectoryObject', 'NtGetContextThread', 'OleInitialize', 'RegSetValueExW', 'Process32FirstW', 'RegEnumValueA', 'RegEnumKeyW', 'CreateRemoteThreadEx', 'NtQueryAttributesFile', 'NtQueryDirectoryFile', 'TaskDialog', 'NtOpenFile', 'LoadStringA', 'CreateDirectoryW', 'Process32NextW', 'GetSystemInfo', 'NtReadVirtualMemory', 'GetTempPathW', 'GetKeyboardState', 'GetFileInformationByHandle', 'Thread32First', 'NtCreateFile', 'CreateActCtxW', 'GetFileVersionInfoExW', 'CreateServiceA', 'WriteConsoleA', 'GetUserNameExA', 'CryptProtectMemory', 'closesocket', 'connect', 'OpenServiceW', 'NtDeleteKey', 'GetShortPathNameW', 'NtWriteVirtualMemory', 'CryptDecrypt', 'NtQueryValueKey', 'NetShareEnum', 'NetUserGetInfo', 'sendto', 'InternetCloseHandle', 'SizeofResource', 'InternetCrackUrlW', 'NtOpenProcess', 'WriteProcessMemory', 'SetInformationJobObject', 'timeGetTime', 'NtDelayExecution', 'NtCreateKey', 'NtSetInformationFile', 'ObtainUserAgentString', 'GetFileAttributesExW', 'IsDebuggerPresent', 'RtlAddVectoredExceptionHandler', 'SetEndOfFile', 'ExitWindowsEx', 'GetAsyncKeyState', 'InternetOpenA', 'GetSystemMetrics', 'CryptExportKey', 'shutdown', 'GetSystemDirectoryA', 'GetVolumePathNameW', 'CopyFileA', 'NtResumeThread', 'NtQueryFullAttributesFile', 'FindFirstFileExA', 'bind', 'NtClose', 'GetDiskFreeSpaceW', 'SetFileInformationByHandle', 'CryptHashData', 'GetVolumeNameForVolumeMountPointW', 'AssignProcessToJobObject', 'NtUnmapViewOfSection',
 'NtQueryKey', 'GetFileVersionInfoW', 'CreateProcessInternalW', 'system', 'GetForegroundWindow', 'InternetOpenUrlW'}

# set_ = set_.intersection(features_api)
# print(set_)'''