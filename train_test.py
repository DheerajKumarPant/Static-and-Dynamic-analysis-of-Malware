import os
import re
import csv
import numpy as np
import pandas as pd
import pickle
import tester
from sklearn import tree, svm
from sklearn.decomposition import PCA
from sklearn.model_selection import train_test_split
import time
from sklearn.metrics import confusion_matrix
from sklearn.neighbors import KNeighborsClassifier

combined = tester.pickle_loader('STATIC_FEATURES')
# print(combined)

combined = combined.sample(frac=1)
# print(combined)
# print(combined)

# print(combined)

# temp_1=0
# temp_2=0
# for i in combined['Label']:
# 	if i==0:
# 		temp_1+=1
# 	else:
# 		temp_2+=1

# print("0 ",temp_1," ","1 ",temp_2)

data, label = tester.data_label_breaker(combined)
print(label)

# print(label)

# temp_1=0
# temp_2=0
# for i in label:
# 	if i==0:
# 		temp_1+=1
# 	else:
# 		temp_2+=1

# print("0 ",temp_1," ","1 ",temp_2)

data_train, data_test, label_train, label_test = train_test_split(data, label, train_size=0.25, test_size=0.75)

# data_test, data_validation, label_test, label_validation = train_test_split(data_test, label_test, train_size=0.5, test_size=0.5)

# t0 = time.time()
# clf = tree.DecisionTreeClassifier()
# clf.fit(data_train, label_train)
# pickle.dump(clf,open('STATIC_MODEL', 'wb'))
# t1 = time.time()
# print("Training Time for DT is ", t1-t0,"ns")
# tester.test_data(clf, data_test, label_test,True)

clf = tester.pickle_loader('STATIC_MODEL')
tester.test_data(clf, data_test, label_test,True)

#C=2.5 91.1
#C=7 kernel = rbf 92.2
#KNN n_neighbours = 7 ,95.5 ,n_neighbours= 6 ,96

# t0 = time.time()
# clf2 = svm.SVC(C=1)
# clf2.fit(data_train, label_train)
# t1 = time.time()
# print("Training Time for CSVM ", t1-t0,"ns")
# tester.test_data(clf2, data_test, label_test,True)


# knn = KNeighborsClassifier(n_neighbors=5) 
# knn.fit(data_train, label_train)   
# tester.test_data(knn, data_test, label_test,True)
